!function(a){"use strict";a.module("copycat",["ngRoute","clip-list","chrome","options","open-new-tab","utils","data-transport","scroll"]).config(["$routeProvider",function(a){a.otherwise({redirectTo:"/"})}]).run(["$rootScope","$chrome","$location","$timeout","$window","DataTransportService",function(a,b,c,d,e,f){b.storage.local.get("currentPage",function(b){b&&a.$apply(function(){c.path(b.currentPage)})}),b.storage.onChanged.addListener(function(b){b.currentPage&&b.currentPage.newValue!==b.currentPage.oldValue&&a.$apply(function(){c.path(b.currentPage.newValue)})}),b.runtime.onMessage.addListener(function(a){"toggleView"===a.message&&"onCreateClip"===a.eventName&&"/"!==c.path()&&d(function(){f.set({openToday:!0}),c.path("/"),e.scrollTo(0,0),b.storage.local.set({scrollPosition:0})},0)})}]).controller("NavbarController",["$scope","$location","$chrome","Utils",function(a,b,c,d){var e=this;e.isActive=function(a){return b.path()===a},e.goToOptions=function(){c.storage.local.set({previousPage:b.path()},function(){c.runtime.lastError&&d.sendRuntimeErrorEvent("Unable to set previous page")}),b.path("/options"),c.runtime.sendMessage({analytic:{type:"pageview",payload:{page:"/options",title:"Options"}}})},e.goBack=function(){c.storage.local.get("previousPage",function(d){a.$apply(function(){b.path(d&&d.previousPage||"/"),c.runtime.sendMessage({analytic:{type:"event",payload:{category:"Clicked",action:"Back"}}})})})},e.goToClips=function(){b.path("/"),c.runtime.sendMessage({analytic:{type:"pageview",payload:{page:"/clips",title:"Clips"}}})},e.goToArchive=function(){b.path("/archive"),c.runtime.sendMessage({analytic:{type:"pageview",payload:{page:"/trash",title:"Trash"}}})}}])}(angular),function(a){"use strict";a.module("clip-shrinker",["copyable","utils","ngSanitize","chrome"]).directive("clipShrinker",["Utils","$chrome",function(a,b){return{restrict:"E",transclude:!0,templateUrl:"directives/clip-shrinker.html",link:function(c,d){c.expanded=!1,c.highlightText=a.highlightText,c.shouldShowMore=function(){var a=d[0].querySelector(".selection-text");return a&&!c.expanded&&a.clientHeight<a.scrollHeight},c.toggleExpand=function(){c.expanded=!c.expanded,b.runtime.sendMessage({analytic:{type:"event",payload:{category:c.expanded?"Show More":"Show Less",action:d[0].querySelector(".selection-text").textContent.length}}})}}}}])}(angular),function(a){"use strict";a.module("copyable",["utils"]).directive("copyable",["$window","Utils",function(a,b){function c(a){var b=a.textContent,c=document.createElement("textarea");a.appendChild(c),c.value=b.trim(),c.focus(),c.select(),document.execCommand("copy"),c.remove()}function d(b){a.getSelection().removeAllRanges();var c=document.createRange();c.selectNodeContents(b),a.getSelection().addRange(c),document.execCommand("copy"),a.getSelection().removeAllRanges()}return{restrict:"A",link:function(a,e,f){var g=a.$eval(f.plain)||!1;a.copyClip=function(h){b.sendClipEvent("Copy",h);var i=e[0];g?c(i):d(i),f.callback&&a.$eval(f.callback)}}}}])}(angular),function(a){"use strict";a.module("directives.fssloading",[]).directive("fssLoading",[function(){return{restrict:"A",replace:!1,scope:{text:"@"},template:'{{ text }} <span class="dot-loading">  <span class="dot dot_1"></span>  <span class="dot dot_2"></span>  <span class="dot dot_3"></span></span>'}}])}(angular),function(a){"use strict";a.module("open-new-tab",["chrome"]).directive("openNewTab",["$chrome",function(a){return{restrict:"A",scope:{},link:function(b,c,d){c.bind("click",function(b){a.runtime.sendMessage({openNewTab:d.href}),b.preventDefault()})}}}])}(angular),function(a){"use strict";a.module("scroll",["chrome"]).directive("syncOnScroll",["$window","$timeout","$chrome",function(b,c,d){return{restrict:"A",scope:{},link:function(){var e,f=!0;a.element(b).bind("scroll",function(){var a=f;f=!0,e&&c.cancel(e),e=c(function(){a&&d.storage.local.set({scrollPosition:b.pageYOffset})},500)}),d.storage.local.get("scrollPosition",function(a){c(function(){f=!1,b.scrollTo(0,a.scrollPosition||0)},500)}),d.storage.onChanged.addListener(function(a){a.scrollPosition&&(f=!1,b.scrollTo(0,a.scrollPosition.newValue))})}}}])}(angular),function(a){"use strict";a.module("clip-list",["ngRoute","chrome","angularMoment","clip-list-archive","utils","clip-shrinker","clip-list-search-filter","directives.fssloading","data-transport"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"features/clip-list/clip-list.html",controller:"ClipListController",controllerAs:"view"})}]).controller("ClipListController",["$scope","$chrome","moment","Utils","DataTransportService",function(b,c,d,e,f){var g=this;g.loaded=!1,g.clips=[],g.groups=[],g.openToday=f.get().openToday;var h=d().startOf("day"),i=d().subtract(7,"days").startOf("day"),j=d().subtract(14,"days").startOf("day");g.orderByDate=e.getClipCreatedNegativeValue,g.convertDate=e.convertDateStringToISOString,g.fromToday=e.fromToday,g.removeClip=function(b){g.clips.splice(g.clips.indexOf(b),1),g.archiveClip(b),e.sendClipEvent("Trash",b),c.storage.local.set({clips:a.copy(g.clips)},function(){c.runtime.lastError&&e.sendRuntimeErrorEvent("Error removing clip from storage: "+chrome.runtime.lastError.message)})},g.archiveClip=function(a){chrome.storage.local.get("archive",function(b){b.archive.push(a),chrome.storage.local.set(b,function(){chrome.runtime.lastError&&e.sendRuntimeErrorEvent("Error adding info to storage: "+chrome.runtime.lastError.message)})})},g.close=function(){c.storage.local.get("options",function(a){var b=a.options;b&&b.closeOnCopy&&c.runtime.sendMessage({message:"toggleView",eventName:"onCopy"})})},g.getGroups=function(){var a=[];a[0]={label:"Today",clips:[],expanded:!1},a[1]={label:"Last 7 days",clips:[],expanded:!1},a[2]={label:"Last 14 days",clips:[],expanded:!1},a[3]={label:"Older",clips:[],expanded:!1};for(var d=0;d<g.clips.length;d++){var k=new Date(g.clips[d].created);k>=h.toDate()?a[0].clips.push(g.clips[d]):k>=i.toDate()?a[1].clips.push(g.clips[d]):k>=j.toDate()?a[2].clips.push(g.clips[d]):a[3].clips.push(g.clips[d])}return c.storage.local.get("expanded",function(h){b.$apply(function(){if(h.expanded){for(d=0;d<a.length;d++)a[d].expanded=h.expanded[d];g.openToday&&(a[0].expanded||(a[0].expanded=!0,h.expanded[0]=!0,c.storage.local.set(h,function(){chrome.runtime.lastError&&e.sendRuntimeErrorEvent("Unable to set expanded: "+chrome.runtime.lastError)})),g.openToday=!1,f.set({}))}else{var b=!1;for(h.expanded=[!1,!1,!1,!1],d=0;d<a.length;d++)if(a[d].clips.length>0){a[d].expanded=!0,h.expanded[d]=!0,b=!0;break}b&&c.storage.local.set(h,function(){chrome.runtime.lastError&&e.sendRuntimeErrorEvent("Unable to set expanded: "+chrome.runtime.lastError)})}})}),a},g.toggleGroup=function(a,b){a.expanded=!a.expanded,c.runtime.sendMessage({analytic:{type:"event",payload:{category:a.expanded?"Group Expanded":"Group Collapsed",action:g.searchText?a.filteredClips.length:a.clips.length,label:a.label}}}),c.storage.local.get("expanded",function(d){d.expanded[b]=a.expanded,c.storage.local.set(d,function(){c.runtime.lastError&&e.sendRuntimeErrorEvent("Unable to set expanded: "+chrome.runtime.lastError)})})},g.clickLink=function(){c.runtime.sendMessage({analytic:{type:"event",payload:{category:"URL Clicked"}}})},g.getFilteredCount=function(){for(var a=0,b=0;b<g.groups.length;b++)g.groups[b].filteredClips&&(a+=g.groups[b].filteredClips.length);return a},g.trackSearch=function(){e.trackSearch("Clips",g.searchText)},g.syncText=function(){c.storage.local.set({searchText:g.searchText})},c.storage.onChanged.addListener(function(a){a.clips?c.storage.local.get("options",function(c){b.$apply(function(){var b=c.options,d=a.clips.newValue.length>g.clips.length;b&&"openCopycat"===b.onCreateClip&&d&&(g.openToday=!0),g.clips=a.clips.newValue,g.groups=g.getGroups()})}):a.expanded?b.$apply(function(){for(var b=0;b<g.groups.length;b++)g.groups[b].expanded=a.expanded.newValue[b]}):a.searchText&&b.$apply(function(){g.searchText=a.searchText.newValue})}),c.storage.local.get("searchText",function(a){b.$apply(function(){g.searchText=a.searchText})}),c.storage.local.get("clips",function(a){b.$apply(function(){a.clips&&(g.clips=a.clips,g.groups=g.getGroups()),g.loaded=!0})}),e.setCurrentPage()}])}(angular),function(a){"use strict";a.module("clip-list-archive",["ngRoute","chrome","utils","clip-shrinker"]).config(["$routeProvider",function(a){a.when("/archive",{templateUrl:"features/clip-list-archive/clip-list-archive.html",controller:"ClipListArchiveController",controllerAs:"view"})}]).controller("ClipListArchiveController",["$scope","$chrome","Utils",function(b,c,d){var e=this;e.loaded=!1,e.clips=[],e.orderByDate=d.getClipCreatedNegativeValue,e.convertDate=d.convertDateStringToISOString,e.fromToday=d.fromToday,e.removeClip=function(b,f){f||d.sendClipEvent("Delete",b),e.clips.splice(e.clips.indexOf(b),1),c.storage.local.set({archive:a.copy(e.clips)},function(){c.runtime.lastError&&d.sendRuntimeErrorEvent("Error removing clip from storage: "+c.runtime.lastError.message)})},e.unarchiveClip=function(a){d.sendClipEvent("Put back",a),c.storage.local.get("clips",function(f){f.clips.push(a),c.storage.local.set(f,function(){c.runtime.lastError?d.sendRuntimeErrorEvent("Error adding info to storage: "+c.runtime.lastError.message):b.$apply(function(){e.removeClip(a,!0)})})})},e.removeAll=function(a){var b;e.searchText?(b=e.filteredClips.length,e.clips=e.clips.filter(function(a){return e.filteredClips.indexOf(a)<0}),e.searchText=""):(b=e.clips.length,e.clips=[]),a||d.sendClipEvent("Delete all",null,b),c.storage.local.set({archive:e.clips},function(){c.runtime.lastError&&d.sendRuntimeErrorEvent("Error removing clip from storage: "+c.runtime.lastError.message)})},e.unarchiveAll=function(){var a;c.storage.local.get("clips",function(f){e.searchText?(a=e.filteredClips.length,f.clips=f.clips.concat(e.filteredClips)):(a=e.clips.length,f.clips=f.clips.concat(e.clips)),d.sendClipEvent("Put all back",null,a),c.storage.local.set(f,function(){c.runtime.lastError?d.sendRuntimeErrorEvent("Error adding info to storage: "+c.runtime.lastError.message):b.$apply(function(){e.removeAll(!0)})})})},e.trackSearch=function(){d.trackSearch("Trash",e.searchText)},e.syncText=function(){c.storage.local.set({searchTextArchive:e.searchText})},c.storage.local.get("searchTextArchive",function(a){b.$apply(function(){e.searchText=a.searchTextArchive})}),c.storage.onChanged.addListener(function(a){a.archive?b.$apply(function(){e.clips=a.archive.newValue}):a.searchTextArchive&&b.$apply(function(){e.searchText=a.searchTextArchive.newValue})}),c.storage.local.get("archive",function(a){b.$apply(function(){a.archive&&(e.clips=a.archive),e.loaded=!0})}),d.setCurrentPage()}])}(angular),function(a){"use strict";a.module("options",["ngRoute","chrome","utils"]).config(["$routeProvider",function(a){a.when("/options",{templateUrl:"features/options/options.html",controller:"OptionsController",controllerAs:"view"})}]).controller("OptionsController",["$scope","$chrome","Utils",function(a,b,c){function d(a){return"boolean"==typeof a?a?"On":"Off":a}var e=this;e.options={},e.supportURL="https://chrome.google.com/webstore/detail/copycat/"+b.runtime.id+"/support",b.storage.local.get("options",function(b){a.$apply(function(){e.options=b.options})}),e.saveOptions=function(a){b.storage.local.set({options:e.options},function(){b.runtime.lastError&&c.sendRuntimeErrorEvent("Error saving options: "+b.runtime.lastError.message)});var f;switch(a){case"onCreateClip":f="When creating new clips, have visual feedback.";break;case"enableAudio":f="Enable Copycat audio when creating new clips.";break;case"closeOnCopy":f="Close Copycat when copying clips.";break;case"allowGA":f="Allow Copycat to collect anonymous usage statistics."}b.runtime.sendMessage({analytic:{type:"event",payload:{category:"Option "+a,action:d(e.options[a]),label:f}}})},b.storage.onChanged.addListener(function(b){b.options&&a.$apply(function(){e.options=b.options.newValue})}),c.setCurrentPage()}])}(angular),function(a){"use strict";a.module("clip-list-search-filter",[]).filter("clipListSearchFilter",function(){return function(a,b){var c=[],d=function(a){return a.toLowerCase().indexOf(b)>-1};if(b){b=b.toLowerCase();for(var e=0;e<a.length;e++)a[e].selectionText&&d(a[e].selectionText)&&c.push(a[e]);return c}return a}})}(angular),function(a,b){"use strict";a.module("chrome",[]).provider("$chrome",function(){return{$get:function(){return b}}})}(angular,chrome),function(a){"use strict";a.module("data-transport",[]).service("DataTransportService",function(){var a={};return this.set=function(b){a=b},this.get=function(){return a},this})}(angular),function(a){"use strict";a.module("utils",["angularMoment","chrome"]).service("Utils",["moment","$chrome","amTimeAgoFilter","$location",function(a,b,c,d){var e=this;e.convertDateStringToISOString=function(a){var b="";return a&&(b=new Date(a).toISOString()),b},e.getClipCreatedNegativeValue=function(a){var b=new Date(a.created).valueOf();return-b},e.fromToday=function(b){return new Date(b.created)>=a().startOf("day")},e.highlightText=function(a,b){var c=a;return b&&a&&(c=a.replace(new RegExp(b,"gi"),'<span class="highlightedText">$&</span>')),c},e.sendClipEvent=function(a,d,f){var g,h;"Delete all"===a||"Put all back"===a?(g=f,h=null):(h=c(e.convertDateStringToISOString(d.created)),"clipSelection"===d.menuItemId?g="Selection":"clipImage"===d.menuItemId&&(g="Image")),b.runtime.sendMessage({analytic:{type:"event",payload:{category:a,action:g,label:h}}})},e.trackSearch=function(a,c){c&&b.runtime.sendMessage({analytic:{type:"event",payload:{category:"Search",action:a}}})},e.sendRuntimeErrorEvent=function(a){b.runtime.sendMessage({analytic:{type:"event",payload:{category:"Error",action:"chrome.runtime.lastError",label:a}}})},e.setCurrentPage=function(){var a=d.path();b.storage.local.get("currentPage",function(c){c&&a!==c.currentPage&&b.storage.local.set({currentPage:d.path()},function(){b.runtime.lastError&&e.sendRuntimeErrorEvent("Unable to set current page")})})}}])}(angular),angular.module("copycat").run(["$templateCache",function(a){"use strict";a.put("directives/clip-shrinker.html",'<p> <div class=clip-text-container> <div copyable plain="clip.menuItemId === \'clipSelection\'" callback=view.close()> <span ng-if="clip.menuItemId === \'clipSelection\'" ng-class="{\'selection-text-expanded\': expanded}" class=selection-text ng-bind-html="highlightText(clip.selectionText, view.searchText)"></span> <img ng-if="clip.menuItemId === \'clipImage\'" ng-src={{clip.srcUrl}} class=clip-image> </div> <div ng-if=shouldShowMore() class=trans-overlay></div> </div> <a ng-if=shouldShowMore() href="" ng-click=toggleExpand() class="selection-text-control clip-show">Show more</a> <a ng-if=expanded href="" ng-click=toggleExpand() class="selection-text-control clip-show">Show less</a> </p>'),a.put("features/clip-list-archive/clip-list-archive.html",'<div ng-hide=view.loaded class=loading fss-loading text=Loading></div> <div ng-show="view.clips.length === 0 && view.loaded" class=tutorial-page> <h4>Trash is empty!</h4> <p> Click on the <span class=fake-button> <span class="glyphicon glyphicon-trash"></span> Trash </span> &nbsp;button to send clips here! </p> </div> <div ng-if="view.clips.length > 0" class=archive-buttons> <button type=button class="btn btn-default btn-xs" ng-click=view.unarchiveAll()> <span class="glyphicon glyphicon-repeat"></span> Put All Back<span class=archive-count>({{view.searchText ? view.filteredClips.length : view.clips.length}})</span> </button>&nbsp; <button type=button class="btn btn-danger btn-xs" ng-click=view.removeAll()> <span class="glyphicon glyphicon-remove"></span> Delete All <span class=archive-count>({{view.searchText ? view.filteredClips.length : view.clips.length}})</span> </button> </div> <input type=search class="form-control input-sm clip-search" placeholder="Search archived clips" ng-model=view.searchText ng-if="view.clips.length > 1" ng-blur=view.trackSearch() ng-change=view.syncText()> <span ng-if="view.searchText && view.filteredClips.length === 0" class=no-search-results> No results! </span> <ul class=list-group> <li ng-repeat="clip in view.filteredClips = (view.clips | clipListSearchFilter: view.searchText) | orderBy: view.orderByDate track by $index" class=list-group-item> <h5 class=clip-title><a ng-href={{clip.pageUrl}} open-new-tab>{{ clip.pageUrl }}</a></h5> <clip-shrinker></clip-shrinker> <div class=clip-buttons> <button type=button class="btn btn-default btn-xs" ng-click=view.unarchiveClip(clip)> <span class="glyphicon glyphicon-repeat"></span> Put back </button> <button type=button class="btn btn-danger btn-xs" ng-click=view.removeClip(clip)> <span class="glyphicon glyphicon-remove"></span> Delete </button> <span class=clip-date>Clipped </span> <span ng-if=view.fromToday(clip) class=clip-date am-time-ago=view.convertDate(clip.created)></span> <span ng-if=!view.fromToday(clip) class=clip-date ng-bind="view.convertDate(clip.created) | amDateFormat:\'dddd, MMMM Do YYYY, h:mm:ss a\'"></span> </div> </li> </ul>'),a.put("features/clip-list/clip-list.html",'<div ng-hide=view.loaded class=loading fss-loading text=Loading></div> <div ng-show="view.clips.length === 0 && view.loaded" class=tutorial-page> <h4>No clips here!</h4> <p> <img src=images/screenshot-clip-selection.png alt="Screenshot of right-clicking highlighted text."> <br> Right-click on highlighted text and select "Copycat this Selection" to save text snippets. </p> <p> <img src=images/screenshot-copy-image.png alt="Screenshot of right-clicking an image."> <br> Or select "Copycat this Image" to save images! </p> </div> <input type=search class="form-control input-sm clip-search" placeholder="Search clips" ng-model=view.searchText ng-if="view.clips.length > 1" ng-blur=view.trackSearch() ng-change=view.syncText()> <span ng-if="view.searchText && view.getFilteredCount() === 0" class=no-search-results> No results! </span> <div ng-repeat="group in view.groups track by $index"> <span ng-if="group.expanded && ((view.searchText && group.filteredClips.length > 0) || (!view.searchText && group.clips.length > 0))" class="glyphicon glyphicon-chevron-up clip-group-expander" ng-click="view.toggleGroup(group, $index)"></span> <span ng-if="!group.expanded && ((view.searchText && group.filteredClips.length > 0) || (!view.searchText && group.clips.length > 0))" class="glyphicon glyphicon-chevron-down clip-group-expander" ng-click="view.toggleGroup(group, $index)"></span> <span ng-if="(view.searchText && group.filteredClips.length > 0) || (!view.searchText && group.clips.length > 0)" class=clip-group ng-click="view.toggleGroup(group, $index)">{{group.label}}<span class=clip-count>( {{(view.searchText ? group.filteredClips.length : group.clips.length)}} )</span></span> <ul class=list-group> <li ng-if=group.expanded ng-repeat="clip in group.filteredClips = (group.clips | clipListSearchFilter: view.searchText) | orderBy: view.orderByDate track by $index" class=list-group-item> <h5 class=clip-title><a ng-href="{{ clip.pageUrl }}" ng-click=view.clickLink() open-new-tab>{{ clip.pageUrl }}</a></h5> <clip-shrinker></clip-shrinker> <div class=clip-buttons> <button type=button class="btn btn-copy btn-xs" ng-click=copyClip(clip)> <span class="glyphicon glyphicon-copy"></span> Copy </button> <button type=button class="btn btn-default btn-xs" ng-click=view.removeClip(clip)> <span class="glyphicon glyphicon-trash"></span> Trash </button> <span class=clip-date>Clipped </span> <span ng-if=view.fromToday(clip) class=clip-date am-time-ago=view.convertDate(clip.created)></span> <span ng-if=!view.fromToday(clip) class=clip-date ng-bind="view.convertDate(clip.created) | amDateFormat:\'dddd, MMMM Do YYYY, h:mm:ss a\'"></span> </div> </li> </ul> </div>'),a.put("features/options/options.html",'<div class="panel panel-primary"> <div class=panel-heading>Copycat Options</div> <div class=panel-body> <p><strong>When creating a new clip...</strong></p> <label class=radio-inline> <input type=radio ng-model=view.options.onCreateClip value=none ng-change="view.saveOptions(\'onCreateClip\')"> Do nothing </label> <label class=radio-inline> <input type=radio ng-model=view.options.onCreateClip value=jiggle ng-change="view.saveOptions(\'onCreateClip\')"> Jiggle the tab </label> <label class=radio-inline> <input type=radio ng-model=view.options.onCreateClip value=openCopycat ng-change="view.saveOptions(\'onCreateClip\')"> Open Copycat </label> <div class=checkbox> <label> <input type=checkbox ng-model=view.options.enableAudio ng-change="view.saveOptions(\'enableAudio\')"> Play a "click" noise </label> </div> <p><strong>When copying a clip...</strong></p> <p> <label class=radio-inline> <input type=radio ng-model=view.options.closeOnCopy ng-value=false ng-change="view.saveOptions(\'closeOnCopy\')"> Do nothing </label> <label class=radio-inline> <input type=radio ng-model=view.options.closeOnCopy ng-value=true ng-change="view.saveOptions(\'closeOnCopy\')"> Close Copycat </label> </p> <p><strong>Allow Copycat to collect anonymous usage statistics</strong></p> <div class=checkbox> <label> <input type=checkbox ng-model=view.options.allowGA ng-change="view.saveOptions(\'allowGA\')"> Send anonymous usage statistics </label> <p class=options-note>This will help us improve Copycat in the future!</p> </div> </div> </div> <div class="panel panel-info"> <div class=panel-heading>Keyboard Shortcuts</div> <div class=panel-body> <table class="table shortcuts-table"> <thead> <tr> <th>&nbsp;</th> <th>Windows</th> <th>Mac</th> </tr> </thead> <tbody> <tr> <td><strong>Enable/Disable Copycat</strong></td> <td class=shortcut>Ctrl+Shift+1</td> <td class=shortcut>Command+Shift+1</td> </tr> <tr> <td><strong>Open/Close Copycat</strong></td> <td class=shortcut>Ctrl+Shift+2</td> <td class=shortcut>Command+Shift+2</td> </tr> </tbody> </table> <br> <p> Note that keyboard shortcuts may conflict with other keyboard shortcuts configured on your system. To configure your own keyboard shortcuts, click <strong>Keyboard shortcuts</strong> at the bottom of the <strong><a href=chrome://extensions open-new-tab>chrome://extensions</a></strong> page. </p> </div> </div> <div class="panel panel-info"> <div class=panel-body> <p> Have a suggestion for how to make Copycat even better?<br> Click <strong><a ng-href={{view.supportURL}} open-new-tab>here</a></strong> to give us your feedback. We\'d love to hear from you! </p> </div> </div>')}]);